import torch

def embed_SH(dirs, degree=8):
    x, y, z = dirs[:, 0], dirs[:, 1], dirs[:, 2]
    xy, xz, yz = x*y, x*z, y*z
    x2, y2, z2 = x*x, y*y, z*z
    x4, y4, z4 = x2*x2, y2*y2, z2*z2
    x6, y6, z6 = x4*x2, y4*y2, z4*z2

    N_rays = x.shape[0]
    embedding = torch.zeros([N_rays, 64]).float()

    embedding[:,  0] =  0.28209479177387814
    embedding[:,  1] = -0.48860251190291987*y
    embedding[:,  2] =  0.48860251190291987*z
    embedding[:,  3] = -0.48860251190291987*x

    embedding[:,  4] =  1.0925484305920792*xy
    embedding[:,  5] = -1.0925484305920792*yz
    embedding[:,  6] =  0.94617469575755997*z2 - 0.31539156525251999
    embedding[:,  7] = -1.0925484305920792*xz
    embedding[:,  8] =  0.54627421529603959*x2 - 0.54627421529603959*y2

    embedding[:,  9] =  0.59004358992664352*y*(-3.0*x2 + y2)
    embedding[:, 10] =  2.8906114426405538*xy*z
    embedding[:, 11] =  0.45704579946446572*y*(1.0 - 5.0*z2)
    embedding[:, 12] =  0.37317633259011540*z*(5.0*z2 - 3.0)
    embedding[:, 13] =  0.45704579946446572*x*(1.0 - 5.0*z2)
    embedding[:, 14] =  1.4453057213202769*z*(x2 - y2)
    embedding[:, 15] =  0.59004358992664352*x*(-x2 + 3.0*y2)

    embedding[:, 16] =  0.59004358992664352*x*(-x2 + 3.0*y2)
    embedding[:, 17] =  1.7701307697799304*yz*(-3.0*x2 + y2)
    embedding[:, 18] =  0.94617469575756008*xy*(7.0*z2 - 1.0)
    embedding[:, 19] =  0.66904654355728921*yz*(3.0 - 7.0*z2)
    embedding[:, 20] = -3.1735664074561294*z2 + 3.7024941420321507*z4 + 0.31735664074561293
    embedding[:, 21] =  0.66904654355728921*xz*(3.0 - 7.0*z2)
    embedding[:, 22] =  0.47308734787878004*(x2 - y2)*(7.0*z2 - 1.0)
    embedding[:, 23] =  1.7701307697799304*xz*(-x2 + 3.0*y2)
    embedding[:, 24] = -3.7550144126950569*x2*y2 + 0.62583573544917614*x4 + 0.62583573544917614*y4
    
    embedding[:, 25] =  0.65638205684017015*y*(10.0*x2*y2 - 5.0*x4 - y4)
    embedding[:, 26] =  8.3026492595241645*xy*z*(x2 - y2)
    embedding[:, 27] = -0.48923829943525038*y*(3.0*x2 - y2)*(9.0*z2 - 1.0)
    embedding[:, 28] =  4.7935367849733241*xy*z*(3.0*z2 - 1.0)
    embedding[:, 29] =  0.45294665119569694*y*(14.0*z2 - 21.0*z4 - 1.0)
    embedding[:, 30] =  0.11695032245342360*z*(-70.0*z2 + 63.0*z4 + 15.0)
    embedding[:, 31] =  0.45294665119569694*x*(14.0*z2 - 21.0*z4 - 1.0)
    embedding[:, 32] =  2.3967683924866621*z*(x2 - y2)*(3.0*z2 - 1.0)
    embedding[:, 33] = -0.48923829943525038*x*(x2 - 3.0*y2)*(9.0*z2 - 1.0)
    embedding[:, 34] =  2.0756623148810411*z*(-6.0*x2*y2 + x4 + y4)
    embedding[:, 35] =  0.65638205684017015*x*(10.0*x2*y2 - x4 - 5.0*y4)
    
    embedding[:, 36] =  1.3663682103838286*xy*(-10.0*x2*y2 + 3.0*x4 + 3.0*y4)
    embedding[:, 37] =  2.3666191622317521*yz*(10.0*x2*y2 - 5.0*x4 - y4)
    embedding[:, 38] =  2.0182596029148963*xy*(x2 - y2)*(11.0*z2 - 1.0)
    embedding[:, 39] = -0.92120525951492349*yz*(3.0*x2 - y2)*(11.0*z2 - 3.0)
    embedding[:, 40] =  0.92120525951492349*xy*(-18.0*z2 + 33.0*z4 + 1.0)
    embedding[:, 41] =  0.58262136251873131*yz*(30.0*z2 - 33.0*z4 - 5.0)
    embedding[:, 42] =  6.6747662381009842*z2 - 20.024298714302954*z4 + 14.684485723822165*z6 - 0.31784601133814211
    embedding[:, 43] =  0.58262136251873131*xz*(30.0*z2 - 33.0*z4 - 5.0)
    embedding[:, 44] =  0.46060262975746175*(x2 - y2)*(11.0*z2*(3.0*z2 - 1.0) - 7.0*z2 + 1.0)
    embedding[:, 45] = -0.92120525951492349*xz*(x2 - 3.0*y2)*(11.0*z2 - 3.0)
    embedding[:, 46] =  0.50456490072872406*(11.0*z2 - 1.0)*(-6.0*x2*y2 + x4 + y4)
    embedding[:, 47] =  2.3666191622317521*xz*(10.0*x2*y2 - x4 - 5.0*y4)
    embedding[:, 48] = 10.247761577878714*x2*y4 - 10.247761577878714*x4*y2 + 0.6831841051919143*x6 - 0.6831841051919143*y6
    
    embedding[:, 49] =  0.70716273252459627*y*(-21.0*x2*y4 + 35.0*x4*y2 - 7.0*x6 + y6)
    embedding[:, 50] =  5.2919213236038001*xy*z*(-10.0*x2*y2 + 3.0*x4 + 3.0*y4)
    embedding[:, 51] = -0.51891557872026028*y*(13.0*z2 - 1.0)*(-10.0*x2*y2 + 5.0*x4 + y4)
    embedding[:, 52] =  4.1513246297620823*xy*z*(x2 - y2)*(13.0*z2 - 3.0)
    embedding[:, 53] = -0.15645893386229404*y*(3.0*x2 - y2)*(13.0*z2*(11.0*z2 - 3.0) - 27.0*z2 + 3.0)
    embedding[:, 54] =  0.44253269244498261*xy*z*(-110.0*z2 + 143.0*z4 + 15.0)
    embedding[:, 55] =  0.090331607582517306*y*(-135.0*z2 + 495.0*z4 - 429.0*z6 + 5.0)
    embedding[:, 56] =  0.068284276912004949*z*(315.0*z2 - 693.0*z4 + 429.0*z6 - 35.0)
    embedding[:, 57] =  0.090331607582517306*x*(-135.0*z2 + 495.0*z4 - 429.0*z6 + 5.0)
    embedding[:, 58] =  0.07375544874083044*z*(x2 - y2)*(143.0*z2*(3.0*z2 - 1.0) - 187.0*z2 + 45.0)
    embedding[:, 59] = -0.15645893386229404*x*(x2 - 3.0*y2)*(13.0*z2*(11.0*z2 - 3.0) - 27.0*z2 + 3.0)
    embedding[:, 60] =  1.0378311574405206*z*(13.0*z2 - 3.0)*(-6.0*x2*y2 + x4 + y4)
    embedding[:, 61] = -0.51891557872026028*x*(13.0*z2 - 1.0)*(-10.0*x2*y2 + x4 + 5.0*y4)
    embedding[:, 62] =  2.6459606618019*z*(15.0*x2*y4 - 15.0*x4*y2 + x6 - y6)
    embedding[:, 63] =  0.70716273252459627*x*(-35.0*x2*y4 + 21.0*x4*y2 - x6 + 7.0*y6)

    dim = [1, 4, 9, 16, 25, 36, 49, 64][degree-1]
    return embedding[:, :dim]

#     // SH polynomials generated using scripts/gen_sh.py based on the recurrence relations in appendix A1 of https://www.ppsloan.org/publications/StupidSH36.pdf
#     data_out(0) = (T)(0.28209479177387814f);                          // 1/(2*sqrt(pi))
#     if (degree <= 1) { return; }
#     data_out(1) = (T)(-0.48860251190291987f*y);                               // -sqrt(3)*y/(2*sqrt(pi))
#     data_out(2) = (T)(0.48860251190291987f*z);                                // sqrt(3)*z/(2*sqrt(pi))
#     data_out(3) = (T)(-0.48860251190291987f*x);                               // -sqrt(3)*x/(2*sqrt(pi))
#     if (degree <= 2) { return; }
#     data_out(4) = (T)(1.0925484305920792f*xy);                                // sqrt(15)*xy/(2*sqrt(pi))
#     data_out(5) = (T)(-1.0925484305920792f*yz);                               // -sqrt(15)*yz/(2*sqrt(pi))
#     data_out(6) = (T)(0.94617469575755997f*z2 - 0.31539156525251999f);                         // sqrt(5)*(3*z2 - 1)/(4*sqrt(pi))
#     data_out(7) = (T)(-1.0925484305920792f*xz);                               // -sqrt(15)*xz/(2*sqrt(pi))
#     data_out(8) = (T)(0.54627421529603959f*x2 - 0.54627421529603959f*y2);                              // sqrt(15)*(x2 - y2)/(4*sqrt(pi))
#     if (degree <= 3) { return; }
#     data_out(9) = (T)(0.59004358992664352f*y*(-3.0f*x2 + y2));                         // sqrt(70)*y*(-3*x2 + y2)/(8*sqrt(pi))
#     data_out(10) = (T)(2.8906114426405538f*xy*z);                             // sqrt(105)*xy*z/(2*sqrt(pi))
#     data_out(11) = (T)(0.45704579946446572f*y*(1.0f - 5.0f*z2));                                // sqrt(42)*y*(1 - 5*z2)/(8*sqrt(pi))
#     data_out(12) = (T)(0.3731763325901154f*z*(5.0f*z2 - 3.0f));                         // sqrt(7)*z*(5*z2 - 3)/(4*sqrt(pi))
#     data_out(13) = (T)(0.45704579946446572f*x*(1.0f - 5.0f*z2));                                // sqrt(42)*x*(1 - 5*z2)/(8*sqrt(pi))
#     data_out(14) = (T)(1.4453057213202769f*z*(x2 - y2));                              // sqrt(105)*z*(x2 - y2)/(4*sqrt(pi))
#     data_out(15) = (T)(0.59004358992664352f*x*(-x2 + 3.0f*y2));                                // sqrt(70)*x*(-x2 + 3*y2)/(8*sqrt(pi))
#     if (degree <= 4) { return; }
#     data_out(16) = (T)(2.5033429417967046f*xy*(x2 - y2));                             // 3*sqrt(35)*xy*(x2 - y2)/(4*sqrt(pi))
#     data_out(17) = (T)(1.7701307697799304f*yz*(-3.0f*x2 + y2));                                // 3*sqrt(70)*yz*(-3*x2 + y2)/(8*sqrt(pi))
#     data_out(18) = (T)(0.94617469575756008f*xy*(7.0f*z2 - 1.0f));                               // 3*sqrt(5)*xy*(7*z2 - 1)/(4*sqrt(pi))
#     data_out(19) = (T)(0.66904654355728921f*yz*(3.0f - 7.0f*z2));                               // 3*sqrt(10)*yz*(3 - 7*z2)/(8*sqrt(pi))
#     data_out(20) = (T)(-3.1735664074561294f*z2 + 3.7024941420321507f*z4 + 0.31735664074561293f);                                // 3*(-30*z2 + 35*z4 + 3)/(16*sqrt(pi))
#     data_out(21) = (T)(0.66904654355728921f*xz*(3.0f - 7.0f*z2));                               // 3*sqrt(10)*xz*(3 - 7*z2)/(8*sqrt(pi))
#     data_out(22) = (T)(0.47308734787878004f*(x2 - y2)*(7.0f*z2 - 1.0f));                                // 3*sqrt(5)*(x2 - y2)*(7*z2 - 1)/(8*sqrt(pi))
#     data_out(23) = (T)(1.7701307697799304f*xz*(-x2 + 3.0f*y2));                                // 3*sqrt(70)*xz*(-x2 + 3*y2)/(8*sqrt(pi))
#     data_out(24) = (T)(-3.7550144126950569f*x2*y2 + 0.62583573544917614f*x4 + 0.62583573544917614f*y4);                         // 3*sqrt(35)*(-6*x2*y2 + x4 + y4)/(16*sqrt(pi))
#     if (degree <= 5) { return; }
#     data_out(25) = (T)(0.65638205684017015f*y*(10.0f*x2*y2 - 5.0f*x4 - y4));                            // 3*sqrt(154)*y*(10*x2*y2 - 5*x4 - y4)/(32*sqrt(pi))
#     data_out(26) = (T)(8.3026492595241645f*xy*z*(x2 - y2));                           // 3*sqrt(385)*xy*z*(x2 - y2)/(4*sqrt(pi))
#     data_out(27) = (T)(-0.48923829943525038f*y*(3.0f*x2 - y2)*(9.0f*z2 - 1.0f));                         // -sqrt(770)*y*(3*x2 - y2)*(9*z2 - 1)/(32*sqrt(pi))
#     data_out(28) = (T)(4.7935367849733241f*xy*z*(3.0f*z2 - 1.0f));                              // sqrt(1155)*xy*z*(3*z2 - 1)/(4*sqrt(pi))
#     data_out(29) = (T)(0.45294665119569694f*y*(14.0f*z2 - 21.0f*z4 - 1.0f));                             // sqrt(165)*y*(14*z2 - 21*z4 - 1)/(16*sqrt(pi))
#     data_out(30) = (T)(0.1169503224534236f*z*(-70.0f*z2 + 63.0f*z4 + 15.0f));                            // sqrt(11)*z*(-70*z2 + 63*z4 + 15)/(16*sqrt(pi))
#     data_out(31) = (T)(0.45294665119569694f*x*(14.0f*z2 - 21.0f*z4 - 1.0f));                             // sqrt(165)*x*(14*z2 - 21*z4 - 1)/(16*sqrt(pi))
#     data_out(32) = (T)(2.3967683924866621f*z*(x2 - y2)*(3.0f*z2 - 1.0f));                               // sqrt(1155)*z*(x2 - y2)*(3*z2 - 1)/(8*sqrt(pi))
#     data_out(33) = (T)(-0.48923829943525038f*x*(x2 - 3.0f*y2)*(9.0f*z2 - 1.0f));                         // -sqrt(770)*x*(x2 - 3*y2)*(9*z2 - 1)/(32*sqrt(pi))
#     data_out(34) = (T)(2.0756623148810411f*z*(-6.0f*x2*y2 + x4 + y4));                         // 3*sqrt(385)*z*(-6*x2*y2 + x4 + y4)/(16*sqrt(pi))
#     data_out(35) = (T)(0.65638205684017015f*x*(10.0f*x2*y2 - x4 - 5.0f*y4));                            // 3*sqrt(154)*x*(10*x2*y2 - x4 - 5*y4)/(32*sqrt(pi))
#     if (degree <= 6) { return; }
#     data_out(36) = (T)(1.3663682103838286f*xy*(-10.0f*x2*y2 + 3.0f*x4 + 3.0f*y4));                               // sqrt(6006)*xy*(-10*x2*y2 + 3*x4 + 3*y4)/(32*sqrt(pi))
#     data_out(37) = (T)(2.3666191622317521f*yz*(10.0f*x2*y2 - 5.0f*x4 - y4));                            // 3*sqrt(2002)*yz*(10*x2*y2 - 5*x4 - y4)/(32*sqrt(pi))
#     data_out(38) = (T)(2.0182596029148963f*xy*(x2 - y2)*(11.0f*z2 - 1.0f));                             // 3*sqrt(91)*xy*(x2 - y2)*(11*z2 - 1)/(8*sqrt(pi))
#     data_out(39) = (T)(-0.92120525951492349f*yz*(3.0f*x2 - y2)*(11.0f*z2 - 3.0f));                               // -sqrt(2730)*yz*(3*x2 - y2)*(11*z2 - 3)/(32*sqrt(pi))
#     data_out(40) = (T)(0.92120525951492349f*xy*(-18.0f*z2 + 33.0f*z4 + 1.0f));                           // sqrt(2730)*xy*(-18*z2 + 33*z4 + 1)/(32*sqrt(pi))
#     data_out(41) = (T)(0.58262136251873131f*yz*(30.0f*z2 - 33.0f*z4 - 5.0f));                            // sqrt(273)*yz*(30*z2 - 33*z4 - 5)/(16*sqrt(pi))
#     data_out(42) = (T)(6.6747662381009842f*z2 - 20.024298714302954f*z4 + 14.684485723822165f*z6 - 0.31784601133814211f);                         // sqrt(13)*(105*z2 - 315*z4 + 231*z6 - 5)/(32*sqrt(pi))
#     data_out(43) = (T)(0.58262136251873131f*xz*(30.0f*z2 - 33.0f*z4 - 5.0f));                            // sqrt(273)*xz*(30*z2 - 33*z4 - 5)/(16*sqrt(pi))
#     data_out(44) = (T)(0.46060262975746175f*(x2 - y2)*(11.0f*z2*(3.0f*z2 - 1.0f) - 7.0f*z2 + 1.0f));                               // sqrt(2730)*(x2 - y2)*(11*z2*(3*z2 - 1) - 7*z2 + 1)/(64*sqrt(pi))
#     data_out(45) = (T)(-0.92120525951492349f*xz*(x2 - 3.0f*y2)*(11.0f*z2 - 3.0f));                               // -sqrt(2730)*xz*(x2 - 3*y2)*(11*z2 - 3)/(32*sqrt(pi))
#     data_out(46) = (T)(0.50456490072872406f*(11.0f*z2 - 1.0f)*(-6.0f*x2*y2 + x4 + y4));                          // 3*sqrt(91)*(11*z2 - 1)*(-6*x2*y2 + x4 + y4)/(32*sqrt(pi))
#     data_out(47) = (T)(2.3666191622317521f*xz*(10.0f*x2*y2 - x4 - 5.0f*y4));                            // 3*sqrt(2002)*xz*(10*x2*y2 - x4 - 5*y4)/(32*sqrt(pi))
#     data_out(48) = (T)(10.247761577878714f*x2*y4 - 10.247761577878714f*x4*y2 + 0.6831841051919143f*x6 - 0.6831841051919143f*y6);                         // sqrt(6006)*(15*x2*y4 - 15*x4*y2 + x6 - y6)/(64*sqrt(pi))
#     if (degree <= 7) { return; }
#     data_out(49) = (T)(0.70716273252459627f*y*(-21.0f*x2*y4 + 35.0f*x4*y2 - 7.0f*x6 + y6));                              // 3*sqrt(715)*y*(-21*x2*y4 + 35*x4*y2 - 7*x6 + y6)/(64*sqrt(pi))
#     data_out(50) = (T)(5.2919213236038001f*xy*z*(-10.0f*x2*y2 + 3.0f*x4 + 3.0f*y4));                             // 3*sqrt(10010)*xy*z*(-10*x2*y2 + 3*x4 + 3*y4)/(32*sqrt(pi))
#     data_out(51) = (T)(-0.51891557872026028f*y*(13.0f*z2 - 1.0f)*(-10.0f*x2*y2 + 5.0f*x4 + y4));                          // -3*sqrt(385)*y*(13*z2 - 1)*(-10*x2*y2 + 5*x4 + y4)/(64*sqrt(pi))
#     data_out(52) = (T)(4.1513246297620823f*xy*z*(x2 - y2)*(13.0f*z2 - 3.0f));                           // 3*sqrt(385)*xy*z*(x2 - y2)*(13*z2 - 3)/(8*sqrt(pi))
#     data_out(53) = (T)(-0.15645893386229404f*y*(3.0f*x2 - y2)*(13.0f*z2*(11.0f*z2 - 3.0f) - 27.0f*z2 + 3.0f));                              // -3*sqrt(35)*y*(3*x2 - y2)*(13*z2*(11*z2 - 3) - 27*z2 + 3)/(64*sqrt(pi))
#     data_out(54) = (T)(0.44253269244498261f*xy*z*(-110.0f*z2 + 143.0f*z4 + 15.0f));                              // 3*sqrt(70)*xy*z*(-110*z2 + 143*z4 + 15)/(32*sqrt(pi))
#     data_out(55) = (T)(0.090331607582517306f*y*(-135.0f*z2 + 495.0f*z4 - 429.0f*z6 + 5.0f));                              // sqrt(105)*y*(-135*z2 + 495*z4 - 429*z6 + 5)/(64*sqrt(pi))
#     data_out(56) = (T)(0.068284276912004949f*z*(315.0f*z2 - 693.0f*z4 + 429.0f*z6 - 35.0f));                              // sqrt(15)*z*(315*z2 - 693*z4 + 429*z6 - 35)/(32*sqrt(pi))
#     data_out(57) = (T)(0.090331607582517306f*x*(-135.0f*z2 + 495.0f*z4 - 429.0f*z6 + 5.0f));                              // sqrt(105)*x*(-135*z2 + 495*z4 - 429*z6 + 5)/(64*sqrt(pi))
#     data_out(58) = (T)(0.07375544874083044f*z*(x2 - y2)*(143.0f*z2*(3.0f*z2 - 1.0f) - 187.0f*z2 + 45.0f));                         // sqrt(70)*z*(x2 - y2)*(143*z2*(3*z2 - 1) - 187*z2 + 45)/(64*sqrt(pi))
#     data_out(59) = (T)(-0.15645893386229404f*x*(x2 - 3.0f*y2)*(13.0f*z2*(11.0f*z2 - 3.0f) - 27.0f*z2 + 3.0f));                              // -3*sqrt(35)*x*(x2 - 3*y2)*(13*z2*(11*z2 - 3) - 27*z2 + 3)/(64*sqrt(pi))
#     data_out(60) = (T)(1.0378311574405206f*z*(13.0f*z2 - 3.0f)*(-6.0f*x2*y2 + x4 + y4));                         // 3*sqrt(385)*z*(13*z2 - 3)*(-6*x2*y2 + x4 + y4)/(32*sqrt(pi))
#     data_out(61) = (T)(-0.51891557872026028f*x*(13.0f*z2 - 1.0f)*(-10.0f*x2*y2 + x4 + 5.0f*y4));                          // -3*sqrt(385)*x*(13*z2 - 1)*(-10*x2*y2 + x4 + 5*y4)/(64*sqrt(pi))
#     data_out(62) = (T)(2.6459606618019f*z*(15.0f*x2*y4 - 15.0f*x4*y2 + x6 - y6));                               // 3*sqrt(10010)*z*(15*x2*y4 - 15*x4*y2 + x6 - y6)/(64*sqrt(pi))
#     data_out(63) = (T)(0.70716273252459627f*x*(-35.0f*x2*y4 + 21.0f*x4*y2 - x6 + 7.0f*y6));                              // 3*sqrt(715)*x*(-35*x2*y4 + 21*x4*y2 - x6 + 7*y6)/(64*sqrt(pi))